{"version":3,"file":"component---src-pages-using-typescript-tsx-ba6e67a96aff008d84af.js","mappings":"+JAsCA,IAnCeA,IAA4C,IAA3C,SAAEC,EAAQ,MAAEC,EAAK,OAAEC,EAAM,SAAEC,GAAUJ,EACnD,MACMK,EAD6B,MAChBJ,EAASK,SAC5B,IAAIC,EAgBJ,OAbEA,EADEF,GAEAG,EAAAA,EAAAA,GAAA,MAAIC,UAAU,iBACZD,EAAAA,EAAAA,GAACE,EAAAA,KAAI,CAACC,GAAG,KAAKT,KAKhBM,EAAAA,EAAAA,GAACE,EAAAA,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCT,IAMLM,EAAAA,EAAAA,GAAA,OACEC,UAAWN,EAAS,kBAAoB,iBACxC,oBAAmBE,IAGnBG,EAAAA,EAAAA,GAAA,YAAOJ,IACPI,EAAAA,EAAAA,GAAA,cAAQ,MACH,IAAII,MAAOC,cAAc,aAC5B,KACAL,EAAAA,EAAAA,GAAA,KAAGM,KAAK,yBAAwB,e,6GCnBxC,MA+BaC,EAA0BA,KAAMP,EAAAA,EAAAA,GAACQ,EAAAA,EAAG,CAACd,MAAM,qBAExD,UAjCwDF,IAAA,IAAC,KACvDiB,EAAI,KACJC,EAAI,SACJjB,GACDD,EAAA,OACCQ,EAAAA,EAAAA,GAACW,EAAAA,EAAM,CAACjB,MAAM,mBAAmBD,SAAUA,IACzCO,EAAAA,EAAAA,GAAA,UAAI,2CACJA,EAAAA,EAAAA,GAAA,SAAG,6CACwCA,EAAAA,EAAAA,GAAA,YAAM,YAAe,2CAClCA,EAAAA,EAAAA,GAAA,YAAM,YAAe,sCACzCA,EAAAA,EAAAA,GAAA,YAAM,oBAAuB,OAEvCA,EAAAA,EAAAA,GAAA,SAAG,6CACwCA,EAAAA,EAAAA,GAAA,UAAI,cAAe,qBACxDA,EAAAA,EAAAA,GAAA,UAAI,cAAe,iBAAaA,EAAAA,EAAAA,GAAA,UAAI,YAAa,WAEvDA,EAAAA,EAAAA,GAAA,SAAG,kCAC8BU,EAAK,uBAAqB,IACxDD,EAAKG,KAAKC,UAAU,MAEvBb,EAAAA,EAAAA,GAAA,SAAG,kCAC+B,KAChCA,EAAAA,EAAAA,GAAA,KAAGM,KAAK,yEAAwE,kCAE5E,MAGNN,EAAAA,EAAAA,GAACE,EAAAA,KAAI,CAACC,GAAG,KAAI,4B,yDCSjB,IAvCYX,IAAuC,IAADsB,EAAAC,EAAAC,EAAA,IAArC,YAAEC,EAAW,MAAEvB,EAAK,SAAEE,GAAUJ,EAC3C,MAAM,KAAEoB,IAASM,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBF,GAAeL,EAAKQ,aAAaH,YACnDI,EAAgC,QAApBP,EAAGF,EAAKQ,oBAAY,IAAAN,OAAA,EAAjBA,EAAmBpB,MAExC,OACEM,EAAAA,EAAAA,GAAAsB,EAAAA,SAAA,MACEtB,EAAAA,EAAAA,GAAA,aAAQqB,EAAkB3B,EAAK,MAAM2B,EAAiB3B,IACtDM,EAAAA,EAAAA,GAAA,QAAMuB,KAAK,cAAcC,QAASL,KAClCnB,EAAAA,EAAAA,GAAA,QAAMyB,SAAS,WAAWD,QAAS9B,KACnCM,EAAAA,EAAAA,GAAA,QAAMyB,SAAS,iBAAiBD,QAASL,KACzCnB,EAAAA,EAAAA,GAAA,QAAMyB,SAAS,UAAUD,QAAQ,aACjCxB,EAAAA,EAAAA,GAAA,QAAMuB,KAAK,eAAeC,QAAQ,aAClCxB,EAAAA,EAAAA,GAAA,QACEuB,KAAK,kBACLC,SAA0B,QAAjBT,EAAAH,EAAKQ,oBAAY,IAAAL,GAAQ,QAARC,EAAjBD,EAAmBW,cAAM,IAAAV,OAAR,EAAjBA,EAA2BW,UAAO,MAE7C3B,EAAAA,EAAAA,GAAA,QAAMuB,KAAK,gBAAgBC,QAAS9B,KACpCM,EAAAA,EAAAA,GAAA,QAAMuB,KAAK,sBAAsBC,QAASL,IACzCvB,G","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Layout = ({ location, title, isBlog, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className={isBlog ? \"global-wrapper2\" : \"global-wrapper\"} \r\n      data-is-root-path={isRootPath}\r\n    >\r\n      {/* <header className=\"global-header\">{header}</header> */}\r\n      <main>{children}</main>\r\n      <footer>\r\n        Â© {new Date().getFullYear()}, Built by\r\n        {` `}\r\n        <a href=\"https://hyperdart.com\">hyperDart</a>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\r\n  data,\r\n  path,\r\n  location,\r\n}) => (\r\n  <Layout title=\"Using TypeScript\" location={location}>\r\n    <h1>Gatsby supports TypeScript by default!</h1>\r\n    <p>\r\n      This means that you can create and write <code>.ts/.tsx</code> files for\r\n      your pages, components, and <code>gatsby-*</code> configuration files (for\r\n      example <code>gatsby-config.ts</code>).\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <em>typescript</em> via npm and\r\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page \"{path}\" which was built on{\" \"}\r\n      {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n"],"names":["_ref","location","title","isBlog","children","isRootPath","pathname","header","___EmotionJSX","className","Link","to","Date","getFullYear","href","Head","Seo","data","path","Layout","site","buildTime","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","social","twitter"],"sourceRoot":""}