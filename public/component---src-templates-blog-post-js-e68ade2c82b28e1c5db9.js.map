{"version":3,"file":"component---src-templates-blog-post-js-e68ade2c82b28e1c5db9.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\n\r\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\r\n  // --- 1. Identify the Current Post ---\r\n  console.log('pageContext in blog post', pageContext);\r\n  const wpPost = data.wpPost;\r\n  const mdPost = data.markdownRemark;\r\n\r\n  // The current post is the one that is NOT null\r\n  const currentPost = wpPost || mdPost;\r\n  const isWordPress = !!wpPost;\r\n  let posterImage;\r\n  if(isWordPress) posterImage = getImage(wpPost.featuredImage?.node);\r\n\r\n  // Handle case where post is not found (e.g., if ID was bad)\r\n  if (!currentPost) {\r\n    return (\r\n      <Layout location={location} title=\"Post Not Found\">\r\n        <p>The content for this post could not be loaded.</p>\r\n      </Layout>\r\n    );\r\n  }\r\n  \r\n  // Define consistent fields for the current post\r\n  const title = isWordPress ? currentPost.title : currentPost.frontmatter.title;\r\n  const date = isWordPress ? currentPost.date : currentPost.frontmatter.date;\r\n  const htmlContent = isWordPress ? currentPost.content : currentPost.html;\r\n  \r\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\r\n\r\n  // --- 2. Identify Navigation Posts ---\r\n  // The navigation post will be the one that is NOT null from the two queries (MD or WP)\r\n  const previousPost = data.previousMD || data.previousWP;\r\n  const nextPost = data.nextMD || data.nextWP;\r\n\r\n  // Helper function to get the path and title from a navigation object\r\n  const getNavProps = (navPost) => {\r\n    if (!navPost) return { path: null, title: null };\r\n    \r\n    // Check if it's a WordPress post (has a 'uri' field)\r\n    const isWp = !!navPost.uri; \r\n    \r\n    return {\r\n      // Use direct fields for WP, nested for MD\r\n      title: isWp ? navPost.title : navPost.frontmatter.title,\r\n      // Use uri for WP, fields.slug for MD\r\n      path: isWp ? navPost.uri : navPost.fields.slug,\r\n    };\r\n  };\r\n\r\n  const prevNav = getNavProps(previousPost);\r\n  const nextNav = getNavProps(nextPost);\r\n  \r\n  return (\r\n    <Layout location={location} title={siteTitle} isBlog={true}>\r\n      <article\r\n        className=\"blog-post\"\r\n        itemScope\r\n        itemType=\"http://schema.org/Article\"\r\n      >\r\n        {posterImage ? (\r\n          <GatsbyImage \r\n            image={posterImage}\r\n            alt=\"Poster Image\"\r\n            style={{marginBottom:'20px'}}\r\n          />\r\n        ):null}\r\n        <header>\r\n          <h1 itemProp=\"headline\">{title}</h1>\r\n          <p>{date}</p>\r\n        </header>\r\n        \r\n        {/* Render the HTML content */}\r\n        <section\r\n          dangerouslySetInnerHTML={{ __html: htmlContent }}\r\n          itemProp=\"articleBody\"\r\n        />\r\n        \r\n        <hr />\r\n        <footer>\r\n          {/* Assuming Bio component is available */}\r\n          <Bio /> \r\n        </footer>\r\n      </article>\r\n      \r\n      {/* Navigation section */}\r\n      <nav className=\"blog-post-nav\">\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previousPost && (\r\n              <Link to={prevNav.path} rel=\"prev\">\r\n                ← {prevNav.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {nextPost && (\r\n              <Link to={nextNav.path} rel=\"next\">\r\n                {nextNav.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const Head = ({ data }) => {\r\n    // 1. Identify the current post data object\r\n    const wpPost = data.wpPost;\r\n    const mdPost = data.markdownRemark;\r\n    const currentPost = wpPost || mdPost;\r\n    const isWordPress = !!wpPost;\r\n\r\n    // Handle case where post is not found\r\n    if (!currentPost) {\r\n        return <Seo title=\"Post Not Found\" />;\r\n    }\r\n\r\n    // 2. Define consistent variables for SEO fields\r\n    // NOTE: WordPress post object has 'excerpt' and 'description' fields, \r\n    // but the Markdown frontmatter only has 'description' and the main node has 'excerpt'.\r\n    const title = isWordPress ? currentPost.title : currentPost.frontmatter.title;\r\n    \r\n    // We check for the explicit description field first, then fall back to the excerpt.\r\n    const description = isWordPress\r\n        ? currentPost.excerpt || \"Default description for WP post.\"\r\n        : currentPost.frontmatter.description || mdPost.excerpt;\r\n\r\n    return (\r\n        <Seo\r\n            title={title}\r\n            description={description}\r\n        />\r\n    );\r\n};\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const query = graphql`\r\nquery BlogPostById(\r\n    $id: String!\r\n\t\t$previousPostId: String\r\n  \t$nextPostId: String\r\n  ) {\r\n    # Fetch site metadata (same as before)\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    \r\n    wpPost: wpPost(id: { eq: $id }) {\r\n      title\r\n      content\r\n      date(formatString: \"MMMM DD, YYYY\")\r\n      uri\r\n      featuredImage {\r\n        node {\r\n          gatsbyImage(\r\n            width: 1200 \r\n            layout: FULL_WIDTH \r\n            aspectRatio: 2.1 \r\n            cropFocus: CENTER\r\n            placeholder: BLURRED\r\n            formats: [AUTO, WEBP, AVIF]\r\n          )\r\n        }\r\n      }\r\n    }\r\n    \r\n    markdownRemark: markdownRemark(id: { eq: $id }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n      }\r\n    }\r\n    \r\n    previousMD: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n\r\n    previousWP: wpPost(id: { eq: $previousPostId }) {\r\n      title\r\n      uri\r\n    }\r\n    \r\n    nextMD: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    \r\n    nextWP: wpPost(id: { eq: $nextPostId }) {\r\n      title\r\n      uri\r\n    }\r\n  }\r\n`;\r\n"],"names":["Head","_ref2","data","wpPost","mdPost","markdownRemark","currentPost","isWordPress","___EmotionJSX","Seo","title","frontmatter","description","excerpt","_ref","_wpPost$featuredImage","_data$site$siteMetada","pageContext","location","console","log","posterImage","getImage","featuredImage","node","Layout","date","htmlContent","content","html","siteTitle","site","siteMetadata","previousPost","previousMD","previousWP","nextPost","nextMD","nextWP","getNavProps","navPost","path","isWp","uri","fields","slug","prevNav","nextNav","isBlog","className","itemScope","itemType","GatsbyImage","image","alt","style","marginBottom","itemProp","dangerouslySetInnerHTML","__html","Bio","display","flexWrap","justifyContent","listStyle","padding","Link","to","rel"],"sourceRoot":""}